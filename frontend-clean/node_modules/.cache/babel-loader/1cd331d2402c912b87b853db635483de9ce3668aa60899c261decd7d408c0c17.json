{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hemac\\\\OneDrive\\\\Desktop\\\\frontend-clean\\\\src\\\\pages\\\\UserDashboardPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UserDashboardPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/UserAuthContext';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboardPage() {\n  _s();\n  const {\n    user,\n    logout,\n    updateUserContext\n  } = useAuth();\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState({\n    firstName: '',\n    lastName: '',\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [editFormVisible, setEditFormVisible] = useState(false);\n\n  // --- Parcel Tracking State ---\n  const [trackingIdInput, setTrackingIdInput] = useState('');\n  const [trackedParcel, setTrackedParcel] = useState(null);\n  const [trackingMessage, setTrackingMessage] = useState({\n    text: '',\n    type: ''\n  });\n\n  // --- Feedback State ---\n  const [currentParcelFeedback, setCurrentParcelFeedback] = useState({\n    feedbackText: '',\n    rating: 0,\n    message: {\n      text: '',\n      type: ''\n    }\n  });\n  const [submittedFeedbackIds, setSubmittedFeedbackIds] = useState(new Set());\n\n  // --- Notifications State (NEW) ---\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [notificationsModalOpen, setNotificationsModalOpen] = useState(false);\n  useEffect(() => {\n    if (!user || user.role !== 'USER' && user.role !== 'ADMIN') {\n      navigate('/login');\n      return;\n    }\n    fetchUserProfile();\n    fetchUnreadCount(); // NEW: Fetch unread count on load to show badge\n  }, [user, navigate]);\n\n  // NEW: useEffect to fetch notifications ONLY when the modal is opened\n  useEffect(() => {\n    if (notificationsModalOpen) {\n      fetchNotifications();\n    }\n  }, [notificationsModalOpen]);\n  const fetchUserProfile = async () => {\n    try {\n      const response = await api.get(`/users/${user.id}`);\n      setProfileData(prev => ({\n        ...prev,\n        firstName: response.data.firstName || '',\n        lastName: response.data.lastName || '',\n        username: response.data.username,\n        email: response.data.email\n      }));\n    } catch (error) {\n      var _error$response;\n      console.error('Failed to fetch user profile:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setMessage({\n        text: 'Failed to load profile data.',\n        type: 'error'\n      });\n    }\n  };\n\n  // --- NEW: Fetch all notifications for the user ---\n  const fetchNotifications = async () => {\n    try {\n      const response = await api.get('/notifications');\n      setNotifications(response.data);\n    } catch (error) {\n      var _error$response2;\n      console.error('Failed to fetch notifications:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      // Handle error without blocking UI\n    }\n  };\n\n  // --- NEW: Fetch unread notification count ---\n  const fetchUnreadCount = async () => {\n    try {\n      const response = await api.get('/notifications/unread/count');\n      setUnreadCount(response.data);\n    } catch (error) {\n      var _error$response3;\n      console.error('Failed to fetch unread count:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    }\n  };\n  const handleChange = e => {\n    setProfileData({\n      ...profileData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage({\n      text: '',\n      type: ''\n    });\n    try {\n      const updatePayload = {\n        firstName: profileData.firstName,\n        lastName: profileData.lastName,\n        username: profileData.username,\n        email: profileData.email\n      };\n      if (profileData.password) {\n        updatePayload.password = profileData.password;\n      }\n      const response = await api.put(`/users/${user.id}`, updatePayload);\n      setMessage({\n        text: 'Profile updated successfully!',\n        type: 'success'\n      });\n      updateUserContext({\n        username: response.data.username,\n        email: response.data.email,\n        firstName: response.data.firstName,\n        lastName: response.data.lastName\n      });\n      setProfileData(prev => ({\n        ...prev,\n        password: ''\n      }));\n      setEditFormVisible(false);\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response5$data;\n      console.error('Error updating user profile:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      setMessage({\n        text: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to update profile.',\n        type: 'error'\n      });\n    }\n  };\n\n  // --- Parcel Tracking Handlers ---\n  const handleTrackParcel = async e => {\n    e.preventDefault();\n    setTrackedParcel(null);\n    setTrackingMessage({\n      text: '',\n      type: ''\n    });\n    setCurrentParcelFeedback({\n      feedbackText: '',\n      rating: 0,\n      message: {\n        text: '',\n        type: ''\n      }\n    });\n    if (!trackingIdInput.trim()) {\n      setTrackingMessage({\n        text: 'Please enter a tracking ID.',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      const response = await api.get(`/parcels/track/${trackingIdInput.trim()}`);\n      const fetchedParcel = response.data;\n      setTrackedParcel(fetchedParcel);\n      setTrackingMessage({\n        text: 'Tracking details found!',\n        type: 'success'\n      });\n      if (fetchedParcel.status === 'DELIVERED') {\n        try {\n          const feedbackExistsResponse = await api.get(`/feedback/exists/${fetchedParcel.id}`);\n          if (feedbackExistsResponse.data === true) {\n            setSubmittedFeedbackIds(prev => new Set(prev).add(fetchedParcel.id));\n          } else {\n            setCurrentParcelFeedback({\n              feedbackText: '',\n              rating: 0,\n              message: {\n                text: '',\n                type: ''\n              }\n            });\n          }\n        } catch (error) {\n          var _error$response6;\n          console.error(`Failed to check feedback existence for tracked parcel ${fetchedParcel.id}:`, ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n        }\n      } else {\n        setCurrentParcelFeedback({\n          feedbackText: '',\n          rating: 0,\n          message: {\n            text: '',\n            type: ''\n          }\n        });\n      }\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error('Tracking error:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n      setTrackingMessage({\n        text: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Parcel not found.',\n        type: 'error'\n      });\n      setTrackedParcel(null);\n    }\n  };\n\n  // --- NEW: handleNotificationClick ---\n  const handleNotificationClick = async notification => {\n    // Automatically populate tracking input and trigger tracking\n    setTrackingIdInput(notification.parcelTrackingId);\n    // We'll call handleTrackParcel inside this function\n    // so it fetches the details from the backend\n    // We need to pass a mock event object to prevent an error\n    await handleTrackParcel({\n      preventDefault: () => {}\n    });\n\n    // Mark the notification as read\n    if (!notification.isRead) {\n      try {\n        await api.put(`/notifications/read/${notification.id}`);\n        // Refresh the notification list and unread count\n        fetchNotifications();\n        fetchUnreadCount();\n      } catch (error) {\n        var _error$response9;\n        console.error('Failed to mark notification as read:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n      }\n    }\n    // Close the modal after clicking\n    setNotificationsModalOpen(false);\n  };\n\n  // --- Feedback Handlers ---\n  const handleFeedbackTextChange = value => {\n    setCurrentParcelFeedback(prev => ({\n      ...prev,\n      feedbackText: value,\n      message: {\n        text: '',\n        type: ''\n      }\n    }));\n  };\n  const handleRatingChange = rating => {\n    setCurrentParcelFeedback(prev => ({\n      ...prev,\n      rating: rating,\n      message: {\n        text: '',\n        type: ''\n      }\n    }));\n  };\n  const handleFeedbackSubmit = async () => {\n    const parcelId = trackedParcel === null || trackedParcel === void 0 ? void 0 : trackedParcel.id;\n    const parcelFeedback = currentParcelFeedback;\n    if (!parcelId || !parcelFeedback || !parcelFeedback.feedbackText || parcelFeedback.rating === 0) {\n      setCurrentParcelFeedback(prev => ({\n        ...prev,\n        message: {\n          text: 'Please provide both feedback text and a rating.',\n          type: 'error'\n        }\n      }));\n      return;\n    }\n    try {\n      const payload = {\n        parcelId: parcelId,\n        feedbackText: parcelFeedback.feedbackText,\n        rating: parcelFeedback.rating\n      };\n      const response = await api.post('/feedback', payload);\n      setCurrentParcelFeedback(prev => ({\n        ...prev,\n        message: {\n          text: 'Feedback submitted successfully!',\n          type: 'success'\n        }\n      }));\n      setSubmittedFeedbackIds(prev => new Set(prev).add(parcelId));\n    } catch (error) {\n      var _error$response0;\n      console.error('Feedback submission error:', ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data) || error.message);\n      setCurrentParcelFeedback(prev => {\n        var _error$response1, _error$response1$data;\n        return {\n          ...prev,\n          message: {\n            text: ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Failed to submit feedback.',\n            type: 'error'\n          }\n        };\n      });\n    }\n  };\n  const StarRating = ({\n    currentRating,\n    onRatingChange\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '2px',\n        cursor: 'pointer',\n        fontSize: '24px',\n        justifyContent: 'center'\n      },\n      children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => onRatingChange(star),\n        style: {\n          color: star <= currentRating ? '#ffc107' : '#e4e5e9'\n        },\n        children: \"\\u2605\"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.firstName || user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setNotificationsModalOpen(true),\n          className: \"notification-button\",\n          children: [\"\\uD83D\\uDD14\", unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-badge\",\n            children: unreadCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          className: \"secondary-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Profile Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 20\n        }, this), \" \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 20\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 20\n        }, this), \" \", user.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditFormVisible(!editFormVisible),\n        className: \"secondary-button\",\n        style: {\n          marginTop: '15px'\n        },\n        children: editFormVisible ? 'Hide Edit Form' : 'Edit Your Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), editFormVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      style: {\n        backgroundColor: '#1a1f26'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: profileData.firstName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: profileData.lastName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: profileData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: profileData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password (leave blank to keep current):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: profileData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track Your Parcel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTrackParcel,\n        className: \"track-parcel-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"trackingIdInput\",\n          children: \"Enter Tracking ID / Order ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"trackingIdInput\",\n          value: trackingIdInput,\n          onChange: e => setTrackingIdInput(e.target.value),\n          placeholder: \"e.g., ABC123DEF456\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Track Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), trackingMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${trackingMessage.type}`,\n        children: trackingMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 42\n      }, this), trackedParcel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parcel-details-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Parcel Details: \", trackedParcel.trackingId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-badge status-${trackedParcel.status.toLowerCase()}`,\n            children: trackedParcel.status.replace('_', ' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Current Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 28\n          }, this), \" \", trackedParcel.currentLocation || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 28\n          }, this), \" \", trackedParcel.description || 'No description provided']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sender:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 28\n          }, this), \" \", trackedParcel.senderName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Recipient:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 28\n          }, this), \" \", trackedParcel.recipientName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 28\n          }, this), \" \", new Date(trackedParcel.updatedAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }, this), trackedParcel.status === 'DELIVERED' && !submittedFeedbackIds.has(trackedParcel.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            paddingTop: '15px',\n            borderTop: '1px solid #333'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Provide Feedback for Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(StarRating, {\n            currentRating: currentParcelFeedback.rating || 0,\n            onRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Tell us about your experience...\",\n            value: currentParcelFeedback.feedbackText || '',\n            onChange: e => handleFeedbackTextChange(e.target.value),\n            rows: \"3\",\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #555',\n              backgroundColor: '#333',\n              color: 'white',\n              marginTop: '10px',\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFeedbackSubmit,\n            style: {\n              marginTop: '10px',\n              padding: '8px 15px',\n              borderRadius: '4px',\n              border: 'none',\n              backgroundColor: '#28a745',\n              color: 'white',\n              cursor: 'pointer'\n            },\n            children: \"Submit Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 33\n          }, this), currentParcelFeedback.message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${currentParcelFeedback.message.type}`,\n            style: {\n              marginTop: '10px'\n            },\n            children: currentParcelFeedback.message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }, this), trackedParcel.status === 'DELIVERED' && submittedFeedbackIds.has(trackedParcel.id) && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '15px',\n            color: '#28a745'\n          },\n          children: \"Thank you for your feedback!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Logistics Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"placeholder-text\",\n        children: \"This area will evolve with more features related to your personal logistics, beyond just tracking.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notificationsModal\",\n      className: `modal ${notificationsModalOpen ? 'open' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-button\",\n          onClick: () => setNotificationsModalOpen(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), notifications.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'none',\n              padding: 0\n            },\n            children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleNotificationClick(notification),\n              style: {\n                backgroundColor: notification.isRead ? '#2a2a2a' : '#3a4f6a',\n                padding: '15px',\n                borderRadius: '8px',\n                marginBottom: '10px',\n                cursor: 'pointer',\n                borderLeft: notification.isRead ? '3px solid #666' : '3px solid #00FFC0',\n                transition: 'background-color 0.2s ease, border-color 0.2s ease'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: '600',\n                  color: notification.isRead ? '#aaa' : '#e0e0e0'\n                },\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '0.85em',\n                  color: '#999',\n                  marginTop: '5px'\n                },\n                children: new Date(notification.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 41\n              }, this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            color: '#aaa',\n            padding: '20px'\n          },\n          children: \"You have no notifications.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n}\n_s(UserDashboardPage, \"I4lgZ+bomd5fZZ61kZlbAtmsVoU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = UserDashboardPage;\nexport default UserDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"UserDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","api","jsxDEV","_jsxDEV","UserDashboardPage","_s","user","logout","updateUserContext","navigate","profileData","setProfileData","firstName","lastName","username","email","password","message","setMessage","text","type","editFormVisible","setEditFormVisible","trackingIdInput","setTrackingIdInput","trackedParcel","setTrackedParcel","trackingMessage","setTrackingMessage","currentParcelFeedback","setCurrentParcelFeedback","feedbackText","rating","submittedFeedbackIds","setSubmittedFeedbackIds","Set","notifications","setNotifications","unreadCount","setUnreadCount","notificationsModalOpen","setNotificationsModalOpen","role","fetchUserProfile","fetchUnreadCount","fetchNotifications","response","get","id","prev","data","error","_error$response","console","_error$response2","_error$response3","handleChange","e","target","name","value","handleSubmit","preventDefault","updatePayload","put","_error$response4","_error$response5","_error$response5$data","handleTrackParcel","trim","fetchedParcel","status","feedbackExistsResponse","add","_error$response6","_error$response7","_error$response8","_error$response8$data","handleNotificationClick","notification","parcelTrackingId","isRead","_error$response9","handleFeedbackTextChange","handleRatingChange","handleFeedbackSubmit","parcelId","parcelFeedback","payload","post","_error$response0","_error$response1","_error$response1$data","StarRating","currentRating","onRatingChange","style","display","gap","cursor","fontSize","justifyContent","children","map","star","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","className","marginTop","backgroundColor","onSubmit","htmlFor","onChange","required","placeholder","trackingId","toLowerCase","replace","currentLocation","description","senderName","recipientName","Date","updatedAt","toLocaleString","has","paddingTop","borderTop","rows","width","padding","borderRadius","border","boxSizing","length","listStyleType","marginBottom","borderLeft","transition","fontWeight","createdAt","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/hemac/OneDrive/Desktop/frontend-clean/src/pages/UserDashboardPage.js"],"sourcesContent":["// src/pages/UserDashboardPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/UserAuthContext';\r\nimport api from '../services/api';\r\n\r\nfunction UserDashboardPage() {\r\n    const { user, logout, updateUserContext } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [profileData, setProfileData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [message, setMessage] = useState({ text: '', type: '' });\r\n    const [editFormVisible, setEditFormVisible] = useState(false);\r\n\r\n    // --- Parcel Tracking State ---\r\n    const [trackingIdInput, setTrackingIdInput] = useState('');\r\n    const [trackedParcel, setTrackedParcel] = useState(null);\r\n    const [trackingMessage, setTrackingMessage] = useState({ text: '', type: '' });\r\n\r\n    // --- Feedback State ---\r\n    const [currentParcelFeedback, setCurrentParcelFeedback] = useState({ feedbackText: '', rating: 0, message: { text: '', type: '' } });\r\n    const [submittedFeedbackIds, setSubmittedFeedbackIds] = useState(new Set());\r\n\r\n    // --- Notifications State (NEW) ---\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [unreadCount, setUnreadCount] = useState(0);\r\n    const [notificationsModalOpen, setNotificationsModalOpen] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user || (user.role !== 'USER' && user.role !== 'ADMIN')) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        fetchUserProfile();\r\n        fetchUnreadCount(); // NEW: Fetch unread count on load to show badge\r\n    }, [user, navigate]);\r\n\r\n    // NEW: useEffect to fetch notifications ONLY when the modal is opened\r\n    useEffect(() => {\r\n        if (notificationsModalOpen) {\r\n            fetchNotifications();\r\n        }\r\n    }, [notificationsModalOpen]);\r\n\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const response = await api.get(`/users/${user.id}`);\r\n            setProfileData(prev => ({\r\n                ...prev,\r\n                firstName: response.data.firstName || '',\r\n                lastName: response.data.lastName || '',\r\n                username: response.data.username,\r\n                email: response.data.email\r\n            }));\r\n        } catch (error) {\r\n            console.error('Failed to fetch user profile:', error.response?.data || error.message);\r\n            setMessage({ text: 'Failed to load profile data.', type: 'error' });\r\n        }\r\n    };\r\n\r\n    // --- NEW: Fetch all notifications for the user ---\r\n    const fetchNotifications = async () => {\r\n        try {\r\n            const response = await api.get('/notifications');\r\n            setNotifications(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch notifications:', error.response?.data || error.message);\r\n            // Handle error without blocking UI\r\n        }\r\n    };\r\n\r\n    // --- NEW: Fetch unread notification count ---\r\n    const fetchUnreadCount = async () => {\r\n        try {\r\n            const response = await api.get('/notifications/unread/count');\r\n            setUnreadCount(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch unread count:', error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProfileData({ ...profileData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage({ text: '', type: '' });\r\n\r\n        try {\r\n            const updatePayload = {\r\n                firstName: profileData.firstName,\r\n                lastName: profileData.lastName,\r\n                username: profileData.username,\r\n                email: profileData.email,\r\n            };\r\n            if (profileData.password) {\r\n                updatePayload.password = profileData.password;\r\n            }\r\n\r\n            const response = await api.put(`/users/${user.id}`, updatePayload);\r\n            setMessage({ text: 'Profile updated successfully!', type: 'success' });\r\n            updateUserContext({\r\n                username: response.data.username,\r\n                email: response.data.email,\r\n                firstName: response.data.firstName,\r\n                lastName: response.data.lastName\r\n            });\r\n            setProfileData(prev => ({ ...prev, password: '' }));\r\n            setEditFormVisible(false);\r\n        } catch (error) {\r\n            console.error('Error updating user profile:', error.response?.data || error.message);\r\n            setMessage({ text: error.response?.data?.message || 'Failed to update profile.', type: 'error' });\r\n        }\r\n    };\r\n\r\n    // --- Parcel Tracking Handlers ---\r\n    const handleTrackParcel = async (e) => {\r\n        e.preventDefault();\r\n        setTrackedParcel(null);\r\n        setTrackingMessage({ text: '', type: '' });\r\n        setCurrentParcelFeedback({ feedbackText: '', rating: 0, message: { text: '', type: '' } });\r\n\r\n        if (!trackingIdInput.trim()) {\r\n            setTrackingMessage({ text: 'Please enter a tracking ID.', type: 'error' });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/parcels/track/${trackingIdInput.trim()}`);\r\n            const fetchedParcel = response.data;\r\n\r\n            setTrackedParcel(fetchedParcel);\r\n            setTrackingMessage({ text: 'Tracking details found!', type: 'success' });\r\n\r\n            if (fetchedParcel.status === 'DELIVERED') {\r\n                try {\r\n                    const feedbackExistsResponse = await api.get(`/feedback/exists/${fetchedParcel.id}`);\r\n                    if (feedbackExistsResponse.data === true) {\r\n                        setSubmittedFeedbackIds(prev => new Set(prev).add(fetchedParcel.id));\r\n                    } else {\r\n                        setCurrentParcelFeedback({ feedbackText: '', rating: 0, message: { text: '', type: '' } });\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`Failed to check feedback existence for tracked parcel ${fetchedParcel.id}:`, error.response?.data || error.message);\r\n                }\r\n            } else {\r\n                setCurrentParcelFeedback({ feedbackText: '', rating: 0, message: { text: '', type: '' } });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Tracking error:', error.response?.data || error.message);\r\n            setTrackingMessage({ text: error.response?.data?.message || 'Parcel not found.', type: 'error' });\r\n            setTrackedParcel(null);\r\n        }\r\n    };\r\n    \r\n    // --- NEW: handleNotificationClick ---\r\n    const handleNotificationClick = async (notification) => {\r\n        // Automatically populate tracking input and trigger tracking\r\n        setTrackingIdInput(notification.parcelTrackingId);\r\n        // We'll call handleTrackParcel inside this function\r\n        // so it fetches the details from the backend\r\n        // We need to pass a mock event object to prevent an error\r\n        await handleTrackParcel({ preventDefault: () => {} });\r\n\r\n        // Mark the notification as read\r\n        if (!notification.isRead) {\r\n            try {\r\n                await api.put(`/notifications/read/${notification.id}`);\r\n                // Refresh the notification list and unread count\r\n                fetchNotifications();\r\n                fetchUnreadCount();\r\n            } catch (error) {\r\n                console.error('Failed to mark notification as read:', error.response?.data || error.message);\r\n            }\r\n        }\r\n        // Close the modal after clicking\r\n        setNotificationsModalOpen(false);\r\n    };\r\n\r\n\r\n    // --- Feedback Handlers ---\r\n    const handleFeedbackTextChange = (value) => {\r\n        setCurrentParcelFeedback(prev => ({\r\n            ...prev,\r\n            feedbackText: value,\r\n            message: { text: '', type: '' }\r\n        }));\r\n    };\r\n\r\n    const handleRatingChange = (rating) => {\r\n        setCurrentParcelFeedback(prev => ({\r\n            ...prev,\r\n            rating: rating,\r\n            message: { text: '', type: '' }\r\n        }));\r\n    };\r\n\r\n    const handleFeedbackSubmit = async () => {\r\n        const parcelId = trackedParcel?.id;\r\n        const parcelFeedback = currentParcelFeedback;\r\n\r\n        if (!parcelId || !parcelFeedback || !parcelFeedback.feedbackText || parcelFeedback.rating === 0) {\r\n            setCurrentParcelFeedback(prev => ({\r\n                ...prev,\r\n                message: { text: 'Please provide both feedback text and a rating.', type: 'error' }\r\n            }));\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = {\r\n                parcelId: parcelId,\r\n                feedbackText: parcelFeedback.feedbackText,\r\n                rating: parcelFeedback.rating\r\n            };\r\n            const response = await api.post('/feedback', payload);\r\n            setCurrentParcelFeedback(prev => ({\r\n                ...prev,\r\n                message: { text: 'Feedback submitted successfully!', type: 'success' }\r\n            }));\r\n            setSubmittedFeedbackIds(prev => new Set(prev).add(parcelId));\r\n        } catch (error) {\r\n            console.error('Feedback submission error:', error.response?.data || error.message);\r\n            setCurrentParcelFeedback(prev => ({\r\n                ...prev,\r\n                message: { text: error.response?.data?.message || 'Failed to submit feedback.', type: 'error' }\r\n            }));\r\n        }\r\n    };\r\n\r\n    const StarRating = ({ currentRating, onRatingChange }) => {\r\n        return (\r\n            <div style={{ display: 'flex', gap: '2px', cursor: 'pointer', fontSize: '24px', justifyContent: 'center' }}>\r\n                {[1, 2, 3, 4, 5].map((star) => (\r\n                    <span\r\n                        key={star}\r\n                        onClick={() => onRatingChange(star)}\r\n                        style={{ color: star <= currentRating ? '#ffc107' : '#e4e5e9' }}\r\n                    >\r\n                        ★\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n\r\n    if (!user) {\r\n        return <div className=\"container\">Loading user data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"dashboard-header\">\r\n                <button onClick={() => navigate(-1)} className=\"back-button\">&larr; Back</button>\r\n                <h2>Welcome, {user.firstName || user.username}!</h2>\r\n                <div className=\"profile-actions\">\r\n                    {/* NEW: Notifications Button with unread count */}\r\n                    <button onClick={() => setNotificationsModalOpen(true)} className=\"notification-button\">\r\n                        🔔\r\n                        {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\r\n                    </button>\r\n                    <button onClick={logout} className=\"secondary-button\">Logout</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"dashboard-section\">\r\n                <h3>Your Profile Details</h3>\r\n                <p><strong>Username:</strong> {user.username}</p>\r\n                <p><strong>Email:</strong> {user.email}</p>\r\n                <p><strong>Role:</strong> {user.role}</p>\r\n                <button onClick={() => setEditFormVisible(!editFormVisible)} className=\"secondary-button\" style={{ marginTop: '15px' }}>\r\n                    {editFormVisible ? 'Hide Edit Form' : 'Edit Your Profile'}\r\n                </button>\r\n            </div>\r\n\r\n            {editFormVisible && (\r\n                <div className=\"dashboard-section\" style={{ backgroundColor: '#1a1f26' }}>\r\n                    <h3>Edit Your Profile</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"firstName\">First Name:</label>\r\n                        <input type=\"text\" id=\"firstName\" name=\"firstName\" value={profileData.firstName} onChange={handleChange} />\r\n\r\n                        <label htmlFor=\"lastName\">Last Name:</label>\r\n                        <input type=\"text\" id=\"lastName\" name=\"lastName\" value={profileData.lastName} onChange={handleChange} />\r\n\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input type=\"text\" id=\"username\" name=\"username\" value={profileData.username} onChange={handleChange} required />\r\n\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id=\"email\" name=\"email\" value={profileData.email} onChange={handleChange} required />\r\n\r\n                        <label htmlFor=\"password\">New Password (leave blank to keep current):</label>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" value={profileData.password} onChange={handleChange} />\r\n\r\n                        <button type=\"submit\">Update Profile</button>\r\n                    </form>\r\n                    {message.text && <div className={`message ${message.type}`}>{message.text}</div>}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"dashboard-section\">\r\n                <h3>Track Your Parcel</h3>\r\n                <form onSubmit={handleTrackParcel} className=\"track-parcel-form\">\r\n                    <label htmlFor=\"trackingIdInput\">Enter Tracking ID / Order ID:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"trackingIdInput\"\r\n                        value={trackingIdInput}\r\n                        onChange={(e) => setTrackingIdInput(e.target.value)}\r\n                        placeholder=\"e.g., ABC123DEF456\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Track Order</button>\r\n                </form>\r\n                {trackingMessage.text && <div className={`message ${trackingMessage.type}`}>{trackingMessage.text}</div>}\r\n\r\n                {/* Display Tracked Parcel Details */}\r\n                {trackedParcel && (\r\n                    <div className=\"parcel-details-card\">\r\n                        <h4>Parcel Details: {trackedParcel.trackingId}</h4>\r\n                        <p><strong>Status:</strong> <span className={`status-badge status-${trackedParcel.status.toLowerCase()}`}>{trackedParcel.status.replace('_', ' ')}</span></p>\r\n                        <p><strong>Current Location:</strong> {trackedParcel.currentLocation || 'N/A'}</p>\r\n                        <p><strong>Description:</strong> {trackedParcel.description || 'No description provided'}</p>\r\n                        <p><strong>Sender:</strong> {trackedParcel.senderName}</p>\r\n                        <p><strong>Recipient:</strong> {trackedParcel.recipientName}</p>\r\n                        <p><strong>Last Updated:</strong> {new Date(trackedParcel.updatedAt).toLocaleString()}</p>\r\n\r\n                        {/* Feedback Section (NEW) - ONLY appears if parcel is DELIVERED and feedback not yet submitted */}\r\n                        {trackedParcel.status === 'DELIVERED' && !submittedFeedbackIds.has(trackedParcel.id) && (\r\n                            <div style={{ marginTop: '15px', paddingTop: '15px', borderTop: '1px solid #333' }}>\r\n                                <h4>Provide Feedback for Delivery</h4>\r\n                                <StarRating\r\n                                    currentRating={currentParcelFeedback.rating || 0}\r\n                                    onRatingChange={handleRatingChange}\r\n                                />\r\n                                <textarea\r\n                                    placeholder=\"Tell us about your experience...\"\r\n                                    value={currentParcelFeedback.feedbackText || ''}\r\n                                    onChange={(e) => handleFeedbackTextChange(e.target.value)}\r\n                                    rows=\"3\"\r\n                                    style={{ width: '100%', padding: '8px', borderRadius: '4px', border: '1px solid #555', backgroundColor: '#333', color: 'white', marginTop: '10px', boxSizing: 'border-box' }}\r\n                                ></textarea>\r\n                                <button onClick={handleFeedbackSubmit} style={{ marginTop: '10px', padding: '8px 15px', borderRadius: '4px', border: 'none', backgroundColor: '#28a745', color: 'white', cursor: 'pointer' }}>\r\n                                    Submit Feedback\r\n                                </button>\r\n                                {currentParcelFeedback.message.text && (\r\n                                    <div className={`message ${currentParcelFeedback.message.type}`} style={{ marginTop: '10px' }}>\r\n                                        {currentParcelFeedback.message.text}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {/* Display submitted message if feedback was given for this specific tracked parcel */}\r\n                        {trackedParcel.status === 'DELIVERED' && submittedFeedbackIds.has(trackedParcel.id) && (\r\n                            <p style={{ marginTop: '15px', color: '#28a745' }}>Thank you for your feedback!</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"dashboard-section\">\r\n                <h3>Your Logistics Overview</h3>\r\n                <p className=\"placeholder-text\">\r\n                    This area will evolve with more features related to your personal logistics, beyond just tracking.\r\n                </p>\r\n            </div>\r\n\r\n            {/* NEW: Notifications Modal */}\r\n            <div id=\"notificationsModal\" className={`modal ${notificationsModalOpen ? 'open' : ''}`}>\r\n                <div className=\"modal-content\">\r\n                    <span className=\"close-button\" onClick={() => setNotificationsModalOpen(false)}>&times;</span>\r\n                    <h2>Notifications</h2>\r\n                    {notifications.length > 0 ? (\r\n                        <div style={{ width: '100%' }}>\r\n                            <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                                {notifications.map(notification => (\r\n                                    <li\r\n                                        key={notification.id}\r\n                                        onClick={() => handleNotificationClick(notification)}\r\n                                        style={{\r\n                                            backgroundColor: notification.isRead ? '#2a2a2a' : '#3a4f6a',\r\n                                            padding: '15px',\r\n                                            borderRadius: '8px',\r\n                                            marginBottom: '10px',\r\n                                            cursor: 'pointer',\r\n                                            borderLeft: notification.isRead ? '3px solid #666' : '3px solid #00FFC0',\r\n                                            transition: 'background-color 0.2s ease, border-color 0.2s ease'\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ fontWeight: '600', color: notification.isRead ? '#aaa' : '#e0e0e0' }}>\r\n                                            {notification.message}\r\n                                        </div>\r\n                                        <div style={{ fontSize: '0.85em', color: '#999', marginTop: '5px' }}>\r\n                                            {new Date(notification.createdAt).toLocaleString()}\r\n                                        </div>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ) : (\r\n                        <p style={{ textAlign: 'center', color: '#aaa', padding: '20px' }}>You have no notifications.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}